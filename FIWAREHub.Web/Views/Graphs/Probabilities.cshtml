@model FIWAREHub.Models.WebModels.ViewModels.ProbabilitiesViewModel

@{
    Layout = "_PlainLayout";
}

<div id="container" class="container">
    <div class="row">
        <div class="col-12">

            <form id="probabilitiesForm" asp-action="ProbabilitiesQuery" asp-controller="Graphs">
                <label asp-for="States"></label>
                <select name="state" class="form-control cstm-select" id="stateSelect">
                    <option disabled selected value="0"> -- select an option -- </option>
                    @foreach (var state in Model.States)
                    {
                        <option value="@state">@(state == "CA" ? "California" : "Texas")</option>
                    }
                </select>

                <label for="Cities">Cities</label>
                <select class="form-control" name="City" id="Cities" disabled></select>

                <label for="Streets">Streets</label>
                <select class="form-control" name="street" id="Streets" disabled></select>

                <label asp-for="WeatherEvents"></label>
                <select name="weatherevent" id="weatherevent" class="form-control cstm-select">
                    <option disabled selected value="0"> -- select an option -- </option>
                    @foreach (var weatherEvent in Model.WeatherEvents)
                    {
                        <option value="@weatherEvent">@weatherEvent</option>
                    }
                </select>

                <label asp-for="WeatherSeverities"></label>
                <select name="weatherSeverity" id="weatherSeverity" class="form-control cstm-select">
                    <option disabled selected value="0"> -- select an option -- </option>
                    @foreach (var weatherSeverity in Model.WeatherSeverities)
                    {
                        <option value="@weatherSeverity">@weatherSeverity</option>
                    }
                </select>
                
                <button id="btnReset" type="reset" class="btn btn-warning">Reset</button>
                <button type="submit" class="btn btn-primary">Submit</button>
            </form>
        </div>
    </div>
</div>


@section Styles {
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-beta.1/dist/css/select2.min.css" rel="stylesheet" />
    <style scoped>
        body {
            width: 100vw;
            height: 100vh;
            margin: 0;
        }

        #container {
            width: 100%;
            height: 100%;
        }
    </style>
}

@section Scripts
{
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-beta.1/dist/js/select2.min.js"></script>

    <script type="text/javascript">
        jQuery(document).ready(function($) {

            $(".cstm-select").select2({
                multiple: false
            });

            $("#btnReset").on("click", (e) => {
                e.preventDefault();
                e.stopImmediatePropagation();

                $(".cstm-select").val(0).trigger('change');
                $("#Cities").empty();
                $("#Streets").empty();
            });

            $("#stateSelect").on("change",
                function() {
                    if (this.value != 0) {
                        $("#Cities").prop("disabled", false);
                        $("#Streets").prop("disabled", false);
                    } else {
                        $("#Cities").prop("disabled", true);
                        $("#Streets").prop("disabled", true);
                    }

                    $("#Cities").empty();
                    $("#Streets").empty();
                });

            $("#Cities").select2({
                ajax: {
                    url: "/graphs/GetStateCities",
                    dataType: 'json',
                    delay: 10,
                    data: function(params) {
                        return {
                            state: $("#stateSelect").val(),
                            search: params.term, // search term
                            page: params.page
                        };
                    },
                    processResults: function(data) {
                        return {
                            results: $.map(data.results,
                                function(item) {
                                    return {
                                        text: item.id,
                                        id: item.text
                                    }
                                }),
                            pagination: data.pagination
                        }
                    },
                    placeholder: 'Search for a repository',
                    minimumInputLength: 3
                }
            });

            $("#Streets").select2({
                ajax: {
                    url: "/graphs/GetStateStreets",
                    dataType: 'json',
                    delay: 10,
                    data: function(params) {
                        return {
                            state: $("#stateSelect").val(),
                            search: params.term, // search term
                            page: params.page
                        };
                    },
                    processResults: function(data) {
                        return {
                            results: $.map(data.results,
                                function(item) {
                                    return {
                                        text: item.id,
                                        id: item.text
                                    }
                                }),
                            pagination: data.pagination
                        }
                    },
                    placeholder: 'Search for a repository',
                    minimumInputLength: 3
                }
            });
        });
    </script>

}
